local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Only dev knows",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Sown123"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local players = game:GetService("Players")
local wrk = game:GetService("Workspace")
local plr = players.LocalPlayer
local hrp = plr.Character:FindFirstChild("HumanoidRootPart")
local humanoid = plr.Character:FindFirstChild("Humanoid")

local function onCharacterAdded(character)
    hrp = character:WaitForChild("HumanoidRootPart")
    humanoid = character:WaitForChild("Humanoid")
end

plr.CharacterAdded:Connect(onCharacterAdded)

if plr.Character then
    onCharacterAdded(plr.Character)
end
local Window = Rayfield:CreateWindow({
    Name = "‚ñ∂ Universal script ‚óÄ",
    LoadingTitle = "Loading...",
    LoadingSubtitle = "by LSownü•µ",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "UniversalHub",
        FileName = "byAgreed"
    },
})

local tab1 = Window:CreateTab("local player")

tab1:CreateInput({
    Name = "T·ªëc ƒë·ªô di chuy·ªÉn",
    PlaceholderText = "Nh·∫≠p t·ªëc ƒë·ªô",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        setPlayerSpeed(value) -- G·ªçi h√†m `setPlayerSpeed` v·ªõi gi√° tr·ªã nh·∫≠p
    end
})

local function showSpeedNotification(speed)
    if speed > 0 then
        Rayfield:Notify({
            Title = "T·ªëc ƒê·ªô ƒê√£ ƒê∆∞·ª£c C·∫≠p Nh·∫≠t",
            Content = "T·ªëc ƒë·ªô c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t th√†nh: " .. speed,
            Duration = 3
        })
    else
        Rayfield:Notify({
            Title = "L·ªói",
            Content = "Gi√° tr·ªã t·ªëc ƒë·ªô kh√¥ng h·ª£p l·ªá! H√£y nh·∫≠p s·ªë l·ªõn h∆°n 0.",
            Duration = 3
        })
    end
end

local function setPlayerSpeed(value)
    local speed = tonumber(value) -- Chuy·ªÉn ƒë·ªïi gi√° tr·ªã nh·∫≠p th√†nh s·ªë
    if speed and speed > 0 then
        if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speed
            showSpeedNotification(speed) -- Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
        else
            Rayfield:Notify({
                Title = "L·ªói",
                Content = "Kh√¥ng t√¨m th·∫•y nh√¢n v·∫≠t ho·∫∑c Humanoid.",
                Duration = 3
            })
        end
    else
        showSpeedNotification(0) -- Hi·ªÉn th·ªã th√¥ng b√°o l·ªói
    end
end

-- V√≠ d·ª•:
setPlayerSpeed("50") -- ƒê·∫∑t t·ªëc ƒë·ªô h·ª£p l·ªá
setPlayerSpeed("abc") -- ƒê·∫∑t t·ªëc ƒë·ªô kh√¥ng h·ª£p l·ªá
