local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Only dev knows",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Sown123"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local players = game:GetService("Players")
local wrk = game:GetService("Workspace")
local plr = players.LocalPlayer
local hrp = plr.Character:FindFirstChild("HumanoidRootPart")
local humanoid = plr.Character:FindFirstChild("Humanoid")

local function onCharacterAdded(character)
    hrp = character:WaitForChild("HumanoidRootPart")
    humanoid = character:WaitForChild("Humanoid")
end

plr.CharacterAdded:Connect(onCharacterAdded)

if plr.Character then
    onCharacterAdded(plr.Character)
end
local Window = Rayfield:CreateWindow({
    Name = "â–¶ Universal script â—€",
    LoadingTitle = "Loading...",
    LoadingSubtitle = "by LSownðŸ¥µ",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "UniversalHub",
        FileName = "byAgreed"
    },
})

local tab1 = Window:CreateTab("local playerðŸ”¥")

local isFlying = false

local tog1 = tab1:CreateToggle({
     Name = "Enable/Disable fly"
     CurrentValue = false,
     Flag = "FlyToggle",
     Callback = function(Value)
        toggleFly(Value)
    end,
})

local function toggleFly(state)
    isFlying = state
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    if state then
        -- KÃ­ch hoáº¡t fly
        local humanoid = character:WaitForChild("Humanoid")
        humanoid.PlatformStand = true
        local flyPart = Instance.new("BodyVelocity", character.PrimaryPart)
        flyPart.Velocity = Vector3.new(0, 50, 0) -- Bay lÃªn
        flyPart.MaxForce = Vector3.new(100000, 100000, 100000)
        flyPart.Name = "FlyVelocity"
    else
        -- Táº¯t fly
        local flyVelocity = character.PrimaryPart:FindFirstChild("FlyVelocity")
        if flyVelocity then
            flyVelocity:Destroy()
        end
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.PlatformStand = false
        end
    end
end

